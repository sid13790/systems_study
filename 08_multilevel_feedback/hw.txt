1.

Here is the list of inputs:
OPTIONS jobs 2
OPTIONS queues 2
OPTIONS allotments for queue  1 is   1
OPTIONS quantum length for queue  1 is  10
OPTIONS allotments for queue  0 is   1
OPTIONS quantum length for queue  0 is  10
OPTIONS boost 0
OPTIONS ioTime 0
OPTIONS stayAfterIO False
OPTIONS iobump False


For each job, three defining characteristics are given:
  startTime : at what time does the job enter the system
  runTime   : the total CPU time needed by the job to finish
  ioFreq    : every ioFreq time units, the job issues an I/O
              (the I/O takes ioTime units to complete)

Job List:
  Job  0: startTime   0 - runTime  17 - ioFreq   0
  Job  1: startTime   0 - runTime   8 - ioFreq   0

EXECUTION TRACE:

[ time 0  ] JOB BEGINS by JOB 0
[ time 0  ] JOB BEGINS by JOB 1
[ time 0  ] Run JOB 0 at PRIORITY 1 [ TICKS 9 ALLOT 1 TIME 16 (of 17) ]
[ time 1  ] Run JOB 0 at PRIORITY 1 [ TICKS 8 ALLOT 1 TIME 15 (of 17) ]
[ time 2  ] Run JOB 0 at PRIORITY 1 [ TICKS 7 ALLOT 1 TIME 14 (of 17) ]
[ time 3  ] Run JOB 0 at PRIORITY 1 [ TICKS 6 ALLOT 1 TIME 13 (of 17) ]
[ time 4  ] Run JOB 0 at PRIORITY 1 [ TICKS 5 ALLOT 1 TIME 12 (of 17) ]
[ time 5  ] Run JOB 0 at PRIORITY 1 [ TICKS 4 ALLOT 1 TIME 11 (of 17) ]
[ time 6  ] Run JOB 0 at PRIORITY 1 [ TICKS 3 ALLOT 1 TIME 10 (of 17) ]
[ time 7  ] Run JOB 0 at PRIORITY 1 [ TICKS 2 ALLOT 1 TIME  9 (of 17) ]
[ time 8  ] Run JOB 0 at PRIORITY 1 [ TICKS 1 ALLOT 1 TIME  8 (of 17) ]
[ time 9  ] Run JOB 0 at PRIORITY 1 [ TICKS 0 ALLOT 1 TIME  7 (of 17) ]
[ time 10 ] RUN JOB 1 at PRIORITY 1 [ TICKS 9 ALLOT 1 TIME  7 (of 8)  ]
[ time 11 ] RUN JOB 1 at PRIORITY 1 [ TICKS 8 ALLOT 1 TIME  6 (of 8)  ]
[ time 12 ] RUN JOB 1 at PRIORITY 1 [ TICKS 7 ALLOT 1 TIME  5 (of 8)  ]
[ time 13 ] RUN JOB 1 at PRIORITY 1 [ TICKS 6 ALLOT 1 TIME  4 (of 8)  ]
[ time 14 ] RUN JOB 1 at PRIORITY 1 [ TICKS 5 ALLOT 1 TIME  3 (of 8)  ]
[ time 15 ] RUN JOB 1 at PRIORITY 1 [ TICKS 4 ALLOT 1 TIME  2 (of 8)  ]
[ time 16 ] RUN JOB 1 at PRIORITY 1 [ TICKS 3 ALLOT 1 TIME  1 (of 8)  ]
[ time 17 ] RUN JOB 1 at PRIORITY 1 [ TICKS 2 ALLOT 1 TIME  0 (of 8)  ]
[ time 18 ] FINISHED JOB 1
[ time 18 ] RUN JOB 0 at PRIORITY 0 [ TICKS 9 ALLOT 1 TIME  6 (of 17) ]
[ time 19 ] RUN JOB 0 at PRIORITY 0 [ TICKS 8 ALLOT 1 TIME  5 (of 17) ]
[ time 20 ] RUN JOB 0 at PRIORITY 0 [ TICKS 7 ALLOT 1 TIME  4 (of 17) ]
[ time 21 ] RUN JOB 0 at PRIORITY 0 [ TICKS 6 ALLOT 1 TIME  3 (of 17) ]
[ time 22 ] RUN JOB 0 at PRIORITY 0 [ TICKS 5 ALLOT 1 TIME  2 (of 17) ]
[ time 23 ] RUN JOB 0 at PRIORITY 0 [ TICKS 4 ALLOT 1 TIME  1 (of 17) ]
[ time 24 ] RUN JOB 0 at PRIORITY 0 [ TICKS 3 ALLOT 1 TIME  0 (of 17) ]
[ time 25 ] FINISHED JOB 0

Final statistics:
  Job  0: startTime   0  - response   0  - turnaround 25
  Job  1: startTime   0  - response   10 - turnaround 18

  Avg  2: startTime n/a  - response   5  - turnaround 21.5


Here is the list of inputs:
OPTIONS jobs 2
OPTIONS queues 2
OPTIONS allotments for queue  1 is   1
OPTIONS quantum length for queue  1 is  10
OPTIONS allotments for queue  0 is   1
OPTIONS quantum length for queue  0 is  10
OPTIONS boost 0
OPTIONS ioTime 0
OPTIONS stayAfterIO False
OPTIONS iobump False


For each job, three defining characteristics are given:
  startTime : at what time does the job enter the system
  runTime   : the total CPU time needed by the job to finish
  ioFreq    : every ioFreq time units, the job issues an I/O
              (the I/O takes ioTime units to complete)

Job List:
  Job  0: startTime   0 - runTime   4 - ioFreq   0
  Job  1: startTime   0 - runTime  13 - ioFreq   0

EXECUTION TRACE:

[ time 0  ] JOB BEGINS by JOB 0
[ time 0  ] JOB BEGINS by JOB 1
[ time 0  ] Run JOB 0 at PRIORITY 1 [ TICKS 9 ALLOT 1 TIME 3  (of 4)  ]
[ time 1  ] Run JOB 0 at PRIORITY 1 [ TICKS 8 ALLOT 1 TIME 2  (of 4)  ]
[ time 2  ] Run JOB 0 at PRIORITY 1 [ TICKS 7 ALLOT 1 TIME 1  (of 4)  ]
[ time 3  ] Run JOB 0 at PRIORITY 1 [ TICKS 6 ALLOT 1 TIME 0  (of 4)  ]
[ time 4  ] FINISHED JOB 0
[ time 4  ] RUN JOB 1 at PRIORITY 1 [ TICKS 9 ALLOT 1 TIME 12 (of 13) ]
[ time 5  ] RUN JOB 1 at PRIORITY 1 [ TICKS 8 ALLOT 1 TIME 11 (of 13) ]
[ time 6  ] RUN JOB 1 at PRIORITY 1 [ TICKS 7 ALLOT 1 TIME 10 (of 13) ]
[ time 7  ] RUN JOB 1 at PRIORITY 1 [ TICKS 6 ALLOT 1 TIME 9  (of 13) ]
[ time 8  ] RUN JOB 1 at PRIORITY 1 [ TICKS 5 ALLOT 1 TIME 8  (of 13) ]
[ time 9 ] RUN JOB 1 at PRIORITY 1 [ TICKS 4 ALLOT 1 TIME 7  (of 13) ]
[ time 10 ] RUN JOB 1 at PRIORITY 1 [ TICKS 3 ALLOT 1 TIME 6  (of 13) ]
[ time 11 ] RUN JOB 1 at PRIORITY 1 [ TICKS 2 ALLOT 1 TIME 5  (of 13) ]
[ time 12 ] RUN JOB 1 at PRIORITY 1 [ TICKS 1 ALLOT 1 TIME 4  (of 13) ]
[ time 13 ] RUN JOB 1 at PRIORITY 1 [ TICKS 0 ALLOT 1 TIME 3  (of 13) ]
[ time 14 ] RUN JOB 1 at PRIORITY 0 [ TICKS 9 ALLOT 1 TIME 2  (of 13) ]
[ time 15 ] RUN JOB 1 at PRIORITY 0 [ TICKS 8 ALLOT 1 TIME 1  (of 13) ]
[ time 16 ] RUN JOB 1 at PRIORITY 0 [ TICKS 7 ALLOT 1 TIME 0  (of 13) ]
[ time 17 ] FINISHED JOB 0

2.

Example 1. ./mlfq.py --numQueues=3 --numJobs=1 --iotime=0 --maxio=0 --jlist=0,200,0
Example 2. ./mlfq.py --numQueues=3 --numJobs=1 --iotime=0 --maxio=0 --jlist=0,200,0:100,20,0
Example 3. ./mlfq.py --numQueues=3 --numJobs=1 --iotime=9 --stay --jlist=0,200,0:50,18,1 
Example 4. 
    a. ./mlfq.py --numQueues=3 --numJobs=1 --iotime=1 --stay --maxio=0 --jlist=0,200,0:100,15,1:100,15,1
    b. ./mlfq.py --numQueues=3 --numJobs=1 --iotime=1 --stay --boost=15 --maxio=0 --jlist=0,200,0:100,15,1:100,15,1


3.

I would have one queue, and make the time slice less than the jobs' lengths

4. 

./mlfq.py --numQueues=3 --numJobs=1 --iotime=1 --maxio=0 --stay --jlist=0,200,0:75,100,9

5.

Every 200ms

6.

Adding them to the back of the queue causes them to essentially starve.